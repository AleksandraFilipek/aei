from queue import Queue
import networkx as nx
import matplotlib.pyplot as plt
G = nx.Graph()
G.add_edges_from([(0,8), (8,9)])
x = plt.subplot()
nx.draw(G, with_labels = True)
plt.show()

def bubbleSort(lista):
    for i in range(0, len(lista)):
        for j in range(0, len(lista)-i-1):
            if lista[j]>lista[j+1]:
                lista[j],lista[j+1] = lista[j+1],lista[j]
    return lista

def selectionSort(lista):
    for i in range(len(lista)-1):
        min=i
        for j in range(i+1,len(lista)):
            if lista[min]>lista[j]:
                min=j
        lista[i], lista[min] = lista[min], lista[i]
    return lista

def insertionSort(lista):
    if len(lista)<=1:
        return lista
    for i in range(1, len(lista)):
        key = lista[i]
        j = i - 1
        while j>=0 and key<lista[j]:
            lista[j+1]=lista[j]
            j-=1
        lista[j+1]=key
    return lista

def binarySearch(lista, szukany):
    lewa=0
    prawa=len(lista)-1
    while lewa <= prawa:
        srodkowa=(lewa+prawa)//2
        if szukany == lista[srodkowa]:
            return srodkowa
        if szukany < lista[srodkowa]:
            prawa = srodkowa - 1
        else:
            lewa = srodkowa + 1
    return 'brak'

def linearSearch(lista, szukany):
    for i in range(len(lista)):
        if lista[i] == szukany:
            return i
    return 'brak'
